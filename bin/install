#!/usr/bin/env bash

# shellcheck source=bin/utils.sh
source "$(dirname "$0")/utils.sh"

install_neovim() {
  local install_type="$1"
  local download_path="$2"
  local install_path="$3"

  if [ -z "$download_path" ]; then
    #: We're on asdf 0.7.*
    download_path=$(mktemp -d -t "asdf-neovim-$install_type-$ASDF_INSTALL_VERSION-XXXX")
    ASDF_DOWNLOAD_PATH="$download_path"
    download_neovim "$ASDF_INSTALL_TYPE" "$ASDF_INSTALL_VERSION" "$ASDF_DOWNLOAD_PATH"
  fi

  if [ "$install_type" = "version" ]; then
    # move the prebuilt artifact to the install path
    mv -f "$download_path"/** "$install_path"
  else
    (
      cd "$download_path" || exit 1

      # compile neovim with some extra flags
      # these flags add the install path to the rtp, allowing us to package up
      # the runtime instead of installing it globally.
      # I sourced these flags for the neovim/bot-ci repo, where the prebuilt
      # artifacts are compiled.
      if [[ "$OSTYPE" == "linux-gnu" ]]; then
        make CMAKE_BUILD_TYPE=RelWithDebInfo CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX:PATH="
      else
        make CMAKE_BUILD_TYPE=Release \
          CMAKE_EXTRA_FLAGS="-DCMAKE_INSTALL_PREFIX:PATH="
      fi

      make DESTDIR="${install_path}" install
    )
  fi

  # delete the download path with -f. I noticed there are some files that it
  # will prompt you to delete. This avoids that.
  rm -rf "$download_path"
}

install_neovim "$ASDF_INSTALL_TYPE" "$ASDF_DOWNLOAD_PATH" "$ASDF_INSTALL_PATH"
